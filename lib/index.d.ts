import { MetadataOptions, PlayerOptions, Event, Track, State, TrackMetadata, Capability, PitchAlgorithm, RatingType } from './interfaces';
export { useTrackPlayerProgress, usePlaybackState, useTrackPlayerEvents } from './hooks';
export { MetadataOptions, PlayerOptions, Event, Track, State, TrackMetadata, Capability, PitchAlgorithm, RatingType };
export declare function setupPlayer(options?: PlayerOptions): Promise<void>;
export declare function destroy(): any;
export declare function updateOptions(options?: MetadataOptions): Promise<void>;
declare type ServiceHandler = () => Promise<void>;
export declare function registerPlaybackService(factory: () => ServiceHandler): void;
export declare function addEventListener(event: Event, listener: (data: any) => void): import("react-native").EmitterSubscription;
export declare function add(tracks: Track | Track[], insertBeforeId?: string): Promise<void>;
export declare function remove(tracks: Track | Track[]): Promise<void>;
export declare function removeUpcomingTracks(): Promise<void>;
export declare function skip(trackId: string): Promise<void>;
export declare function skipToNext(): Promise<void>;
export declare function skipToPrevious(): Promise<void>;
export declare function updateMetadataForTrack(trackId: string, metadata: TrackMetadata): Promise<void>;
export declare function reset(): Promise<void>;
export declare function play(): Promise<void>;
export declare function pause(): Promise<void>;
export declare function stop(): Promise<void>;
export declare function seekTo(position: number): Promise<void>;
export declare function setVolume(level: number): Promise<void>;
export declare function setRate(rate: number): Promise<void>;
export declare function getVolume(): Promise<number>;
export declare function getRate(): Promise<number>;
export declare function getTrack(trackId: string): Promise<Track>;
export declare function getQueue(): Promise<Track[]>;
export declare function getCurrentTrack(): Promise<string>;
export declare function getDuration(): Promise<number>;
export declare function getBufferedPosition(): Promise<number>;
export declare function getPosition(): Promise<number>;
export declare function getState(): Promise<State>;
export declare const STATE_NONE: State;
export declare const STATE_READY: State;
export declare const STATE_PLAYING: State;
export declare const STATE_PAUSED: State;
export declare const STATE_STOPPED: State;
export declare const STATE_BUFFERING: State;
export declare const STATE_CONNECTING: State;
export declare const CAPABILITY_PLAY: Capability;
export declare const CAPABILITY_PLAY_FROM_ID: Capability;
export declare const CAPABILITY_PLAY_FROM_SEARCH: Capability;
export declare const CAPABILITY_PAUSE: Capability;
export declare const CAPABILITY_STOP: Capability;
export declare const CAPABILITY_SEEK_TO: Capability;
export declare const CAPABILITY_SKIP: Capability;
export declare const CAPABILITY_SKIP_TO_NEXT: Capability;
export declare const CAPABILITY_SKIP_TO_PREVIOUS: Capability;
export declare const CAPABILITY_JUMP_FORWARD: Capability;
export declare const CAPABILITY_JUMP_BACKWARD: Capability;
export declare const CAPABILITY_SET_RATING: Capability;
export declare const CAPABILITY_LIKE: Capability;
export declare const CAPABILITY_DISLIKE: Capability;
export declare const CAPABILITY_BOOKMARK: Capability;
export declare const PITCH_ALGORITHM_LINEAR: PitchAlgorithm;
export declare const PITCH_ALGORITHM_MUSIC: PitchAlgorithm;
export declare const PITCH_ALGORITHM_VOICE: PitchAlgorithm;
export declare const RATING_HEART: RatingType;
export declare const RATING_THUMBS_UP_DOWN: RatingType;
export declare const RATING_3_STARS: RatingType;
export declare const RATING_4_STARS: RatingType;
export declare const RATING_5_STARS: RatingType;
export declare const RATING_PERCENTAGE: RatingType;
